<?xml version="1.0" encoding="UTF-8"?>
<icegrid>
	<application name="MyTicketBookSystem">
		<properties id="MultiThreaded">
			<property name="Ice.PrintStackTraces" value="1" />
			<property name="Ice.ThreadPool.Client.Size" value="2" />
			<property name="Ice.ThreadPool.Client.SizeMax" value="50" />
			<property name="Ice.ThreadPool.Server.Size" value="10" />
			<property name="Ice.ThreadPool.Server.SizeMax" value="100" />
			<property name="IceBox.InheritProperties" value="1" />
			<property name="Ice.Override.ConnectTimeout" value="5000" />
			<property name="Ice.Override.Timeout" value="10000" />
			<property name="IceBox.Trace.ServiceObserver" value="1" />
			<property name="Ice.Default.LocatorCacheTimeout" value="300" />
			<property name="Ice.BackgroundLocatorCacheUpdates" value="1" />


			<property name="Ice.Trace.Retry" value="2" />
			<property name="Ice.Trace.Network" value="1" />
			<property name="Ice.Trace.ThreadPool" value="1" />
			<property name="Ice.Trace.Locator" value="1" />
			<property name="Ice.StdErr" value="D:\temp\ice\grid.stderr.log" />
			<property name="Ice.StdOut" value="D:\temp\ice\grid.stdout.log" />
		</properties>

		<!-- 定义服务器模板 -->
		<server-template id="TicketOrderServerTemplate">
			<parameter name="id" />
			<icebox id="TicketOrderServer${id}" exe="java" activation="on-demand">
				<properties>
					<properties refid="MultiThreaded" />
				</properties>
				<option>-Xmx512M</option>
				<option>-DAppId=TicketOrderServer${id}</option>
				<!-- 指定启动类,替代IceBox.Server作为IceBox的启动类 -->
				<option>com.bow.ice.Sl4jIceBoxServer</option>
				<service name="TicketService" entry="com.bow.ice.service.MyTicketService">
					<adapter name="TicketService" id="TicketService${id}" endpoints="tcp" replica-group="TicketServiceRep"></adapter>
				</service>
			</icebox>
		</server-template>

		<!-- 定义适配器复制组 -->
		<replica-group id="TicketServiceRep">
			<load-balancing type="round-robin" n-replicas="0" />
			<!-- identity将在客户端中使用 -->
			<object identity="TicketService" type="::com::bow::ticket::TicketService" />
		</replica-group>
		<node name="node1">
			<server-instance template="TicketOrderServerTemplate" id="1" />
			<server-instance template="TicketOrderServerTemplate" id="2" />
		</node>
		<node name="node2">
			<server-instance template="TicketOrderServerTemplate" id="3" />
		</node>
	</application>
</icegrid>